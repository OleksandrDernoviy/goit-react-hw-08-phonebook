{"version":3,"file":"static/js/268.8692f25c.chunk.js","mappings":"+NACA,GAAgB,QAAU,2BAA2B,aAAe,gCAAgC,aAAe,gCAAgC,aAAe,gCAAgC,WAAa,8BAA8B,WAAW,6B,SCO3OA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEf,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KAAaH,MAAM,yBAAyBI,SAAS,YAC5DH,SAAUE,EAAAA,KAAaC,SAAS,cAElCC,SAAU,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACnBb,GAASc,EAAAA,EAAAA,IAAMH,IACfE,GACF,EAAEE,UAEFC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAWC,EAAAA,QAAaC,aAAa,MAAKL,SAAA,EAC9Cb,EAAAA,EAAAA,KAAA,MAAIgB,UAAWC,EAAAA,aAAiBJ,SAAC,YACjCC,EAAAA,EAAAA,MAAA,SAAOE,UAAWC,EAAAA,aAAiBJ,SAAA,CAAC,SAElCb,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CACJH,UAAWC,EAAAA,aACXG,KAAK,QACLC,KAAK,QACLC,YAAY,sBAEdtB,EAAAA,EAAAA,KAACuB,EAAAA,GAAY,CAACF,KAAK,QAAQG,UAAU,MAAMR,UAAWC,EAAAA,YAExDH,EAAAA,EAAAA,MAAA,SAAOE,UAAWC,EAAAA,aAAiBJ,SAAA,CAAC,YAElCb,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CACJH,UAAWC,EAAAA,aACXG,KAAK,WACLC,KAAK,WACLC,YAAY,yBAEdtB,EAAAA,EAAAA,KAACuB,EAAAA,GAAY,CAACF,KAAK,WAAWG,UAAU,MAAMR,UAAWC,EAAAA,YAE3DjB,EAAAA,EAAAA,KAAA,UAAQgB,UAAWC,EAAAA,WAAgBG,KAAK,SAAQP,SAAC,eAMzD,E,oBCrCF,G,QATkB,WAChB,OACEC,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAZ,SAAA,EACEb,EAAAA,EAAAA,KAAC0B,EAAAA,GAAc,KACf1B,EAAAA,EAAAA,KAACH,EAAS,MAGhB,E","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logForm\":\"LoginForm_logForm__DSru-\",\"logFormTitle\":\"LoginForm_logFormTitle__kQRbn\",\"logFormLabel\":\"LoginForm_logFormLabel__6p9q6\",\"logFormInput\":\"LoginForm_logFormInput__E9xn-\",\"logFormBtn\":\"LoginForm_logFormBtn__MZLzT\",\"eye-icon\":\"LoginForm_eye-icon__XKgqR\"};","\n\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from '../../store/auth/authOperations';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n    return (\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={Yup.object({\n          email: Yup.string().email('Invalid email address').required('Required'),\n          password: Yup.string().required('Required'),\n        })}\n        onSubmit={(values, { resetForm }) => {\n          dispatch(logIn(values));\n          resetForm();\n        }}\n      >\n        <Form className={css.logForm} autoComplete=\"off\">\n          <h2 className={css.logFormTitle}>Log In</h2>\n          <label className={css.logFormLabel}>\n            Email\n            <Field\n              className={css.logFormInput}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n            />\n            <ErrorMessage name=\"email\" component=\"div\" className={css.error} />\n          </label>\n          <label className={css.logFormLabel}>\n            Password\n            <Field\n              className={css.logFormInput}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" className={css.error} />\n          </label>\n          <button className={css.logFormBtn} type=\"submit\">\n            Log In\n          </button>\n        </Form>\n      </Formik>\n    );\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { LoginForm } from 'components/LoginForm/LoginForm'\nimport React from 'react'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <ToastContainer />\n      <LoginForm />\n    </>\n  );\n}\n\nexport default LoginPage"],"names":["LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","email","password","validationSchema","Yup","required","onSubmit","values","_ref","resetForm","logIn","children","_jsxs","Form","className","css","autoComplete","Field","type","name","placeholder","ErrorMessage","component","_Fragment","ToastContainer"],"sourceRoot":""}